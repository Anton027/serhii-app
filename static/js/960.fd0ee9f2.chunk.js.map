{"version":3,"file":"static/js/960.fd0ee9f2.chunk.js","mappings":"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","sources":["components/CatalogList/CatalogList.styled.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","components/CatalogList/CatalogList.js","pages/Gallery.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CatalogSect = styled.section`\n\n    margin-bottom: 30px;\n`\nexport const Video = styled.video`\n    width: 290px;\n\n    cursor: pointer;\n    @media (min-width: 768px){\n        width: 320px;\n    }\n        @media (min-width: 1240px){\n        width: 390px;\n    } \n\n`\nexport const List = styled.ul`\n        display: grid;\n        padding: 10px;\n\n    @media (min-width: 768px){\n        padding: 20px;\n        grid-template-columns: repeat(2, 1fr);\n        grid-gap: 15px;\n        padding: 15px;\n    }\n        @media (min-width: 1240px){\n        padding: 40px;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 20px;\n        padding: 20px;\n    }\n`\nexport const Item = styled.div`\n    margin-bottom: 20px;\n    border-bottom: 1px solid gray;\n    border-radius: 10px;\n\n    color: #fff;\n    &:hover,&:focus{\n        transform: scale(1.07);\n        border-bottom: 1px solid #fff;\n        box-shadow: 0px 1px 30px 8px rgba(255,255,255,1);\n    }\n`;\nexport const Title = styled.h2`\n    text-align: center;\n    margin-bottom:15px;\n    color: #fff;\n`\nexport const LinkMore = styled(NavLink)`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    margin-left: auto;\n    margin-right: auto;\n\n    color: whitesmoke;\n    background-color:black;\n    min-width: 80px;\n    border: 1px solid #fff;\n    border-radius: 12px;\n    padding:5px 12px;\n    cursor: pointer;\n    &:hover,&:focus{\n        transform: scale(1.07);\n        box-shadow: 0px 1px 30px 8px rgba(255,255,255,1);\n        border-color: #fff;\n        color: #fff ;\n    }\n`\nexport const InfoVideo = styled.p`\n    padding: 7px;\n    color: #fff;\n`;\nexport const InfoVideoModal = styled.p`\n    padding: 7px;\n    color: #000;\n    text-align: center;\n`;\nexport const WrapLink = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const WindowModal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: rgba(240, 240, 240, 0.8);\n    border: 2px solid #640980;\n    border-radius:  8px;\n    padding:10px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    box-shadow: 0px 1px 30px 8px rgba(255,255,255,1);\n`","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import {\n    CatalogSect,\n    Video,\n    LinkMore,\n    InfoVideo,\n    List,\n    Item,\n    Title,\n    WrapLink,\n    InfoVideoModal,\n    WindowModal\n} from \"./CatalogList.styled\"\nimport { Container } from \"components/Container\";\n\nimport * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 800,\n//     bgcolor: 'background.paper',\n//     border: '2px solid #000',\n//     boxShadow: 24,\n//     p: 4,\n// };\n\nexport const CatalogList = () => {\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return (\n        <>\n        <CatalogSect>\n                <Container>\n                    <Title \n                        lang=\"en\"\n                    >\n                        Portfilio or My Projects\n                    </Title>\n                    <List >\n                        {/* <Slider {...settings}> */}\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                            <Item onClick={handleOpen}>\n                                <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                                <InfoVideo>\n                                    Since Material UI components are built to function in\n                                    isolation, they don't require any\n                                    kind of globally scoped styles.\n                                    For a better user experience and developer experience, we recommend\n                                    adding the following globals to your app.\n                                </InfoVideo>\n                            </Item>\n                        {/* </Slider> */}\n                    </List>\n                    <WrapLink>\n                        <LinkMore to={\"/gallery\"}>\n                            More\n                        </LinkMore>\n                    </WrapLink>\n                </Container>\n            </CatalogSect>\n\n            <div>\n                {/* <Button onClick={handleOpen}>Open modal</Button> */}\n                <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <WindowModal>\n                        <Video \n                                    src=\"http://techslides.com/demos/sample-videos/small.webm\"\n                                    poster=\"https://images.pexels.com/photos/595804/pexels-photo-595804.jpeg?w=640\" \n                                    controls \n                                    loop\n                                    preload=\"auto\">\n                                </Video>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                            <InfoVideoModal>\n                                        Since Material UI components are built to function in\n                                        isolation, they don't require any\n                                        kind of globally scoped styles.\n                                        For a better user experience and developer experience, we recommend\n                                        adding the following globals to your app.\n                            </InfoVideoModal>\n                        </Typography>\n                    {/* <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                    </Typography> */}\n                    </WindowModal>\n                </Modal>\n            </div>\n        </>\n    )\n}","import { CatalogList } from \"components/CatalogList\";\n\nconst Gallery = () => {\n    return (\n        <>\n            <CatalogList />\n        </>\n    )\n};\nexport default Gallery;"],"names":["CatalogSect","styled","Video","List","Item","Title","LinkMore","NavLink","InfoVideo","InfoVideoModal","WrapLink","WindowModal","_excluded","extendSxProp","props","finalSx","inSx","sx","_props$theme$unstable","_props$theme","result","systemProps","otherProps","config","theme","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","prop","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TypographyRoot","name","overridesResolver","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","CatalogList","open","setOpen","handleOpen","Container","lang","onClick","src","poster","controls","loop","preload","to","Modal","onClose","id"],"sourceRoot":""}